#!/usr/bin/env bash
[ -z "$DEBUG" ] || set -x
set -eo pipefail

[ -n "$PLATFORMS" ] || PLATFORMS="linux/amd64,linux/arm64/v8"
[ -n "$PLATFORM" ] || PLATFORM="--platform=$PLATFORMS"

[ -z "$REGISTRY" ] || PREFIX="$REGISTRY/"

SOURCE_COMMIT=$(git rev-parse --verify HEAD 2>/dev/null || echo '')
if [[ ! -z "$SOURCE_COMMIT" ]]; then
  GIT_STATUS=$(git status --untracked-files=normal --porcelain=v2 | grep -v ' hooks/build' || true)
  if [[ ! -z "$GIT_STATUS" ]]; then
    SOURCE_COMMIT="$SOURCE_COMMIT-dirty"
  fi
fi

MULTIARCH_NONROOT="
builder-base
builder-base-gcc
builder-base-gcloud
builder-tooling
builder-node
builder-quarkus
git-init
toil
toil-network
node-distroless
blobs
"

MULTIARCH_TONONROOT="
java
node
node-kafka
node-kafka-cache
node-watchexec
node-gcloud
runtime-quarkus-ubuntu
runtime-quarkus-ubuntu-jre
runtime-quarkus-dev
toil-storage
"

AMD64ONLY="
runtime-quarkus
runtime-quarkus-deno
runtime-deno
git-http-readonly
headless-chrome
"

XTAG=""

[ -n "$NOPUSH" ] || BUILDX_PUSH="--push"

export SOURCE_DATE_EPOCH=0
OUTPUT="type=registry,oci-mediatypes=true,rewrite-timestamp=true"

cat ./Dockerfile | \
  docker buildx build $BUILDX_PUSH --progress=plain $PLATFORM --output "$OUTPUT" \
  -t yolean/docker-base -t ${PREFIX}yolean/docker-base:$SOURCE_COMMIT$XTAG -

for CONTEXT in $MULTIARCH_NONROOT; do
  ! (grep -r FROM ./$CONTEXT | grep -v 'FROM --platform=')
  cat ./$CONTEXT/Dockerfile | \
    docker buildx build $BUILDX_PUSH --progress=plain $PLATFORM -f - --output "$OUTPUT" \
    -t yolean/$CONTEXT -t ${PREFIX}yolean/$CONTEXT:$SOURCE_COMMIT$XTAG ./$CONTEXT
done

for CONTEXT in $MULTIARCH_TONONROOT; do
  ! (grep -r FROM ./$CONTEXT | grep -v 'FROM --platform=')
  cat ./$CONTEXT/Dockerfile | \
    docker buildx build $BUILDX_PUSH --progress=plain $PLATFORM -f - --output "$OUTPUT" \
    -t yolean/$CONTEXT:root -t ${PREFIX}yolean/$CONTEXT:$SOURCE_COMMIT$XTAG-root ./$CONTEXT
done
for CONTEXT in $MULTIARCH_TONONROOT; do
  cat ./$CONTEXT/Dockerfile ./nonroot-footer.Dockerfile | \
    docker buildx build $BUILDX_PUSH --progress=plain $PLATFORM -f - --output "$OUTPUT" \
    -t yolean/$CONTEXT -t ${PREFIX}yolean/$CONTEXT:$SOURCE_COMMIT$XTAG ./$CONTEXT
done

PUSH=""

for CONTEXT in $AMD64ONLY; do
  IMAGE=${PREFIX}yolean/$CONTEXT:$SOURCE_COMMIT$XTAG
  docker build --platform=linux/amd64 -t yolean/$CONTEXT -t $IMAGE ./$CONTEXT
  PUSH="$PUSH $IMAGE"
  if [ "" = "$(docker image inspect -f='{{.Config.User}}' $IMAGE)" ]; then
    docker tag $IMAGE $IMAGE-root
    PUSH="$PUSH $IMAGE-root"
    cat ./$CONTEXT/Dockerfile ./nonroot-footer.Dockerfile | \
      docker build --platform=linux/amd64 -f - -t yolean/$CONTEXT -t $IMAGE ./$CONTEXT
  fi
done

echo "amd64-only PUSH list contains: $PUSH"
[ -z "$NOPUSH" ] || exit 0
for P in $PUSH; do docker push $P; done
