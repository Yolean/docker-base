name: images

on:
  push:
    branches:
    - main
    - nodejs-*

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
    -
      name: Checkout
      uses: actions/checkout@v4
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    -
      uses: actions/setup-go@v5
      with:
        go-version: 1.22
    -
      uses: imjasonh/setup-crane@v0.3
    -
      run: |
        set -x
        TAG_KKV=7fa31f42731fc20a77988b478a3896732cc3dc88
        TAG_HOOK=92363d7d1771abc780e7559c778215be61f934d4
        TAG_KAFKA=2.5.1-kafka-server-start
        TAG_ZOOKEEPER=2.5.1-zookeeper-server-start
        TAG_INITUTILS=initutils-nonroot@sha256:8988aca5b34feabe8d7d4e368f74b2ede398f692c7e99a38b262a938d475812c
        TAG_ENVOY=v1.32.3
        TAG_CURL=8.9.1
        TAG_BUSYBOX=1.36.1-glibc
        TAG_TINYGO=0.32.0
        crane cp docker.io/yolean/kafka-keyvalue:$TAG_KKV ghcr.io/yolean/kafka-keyvalue:$TAG_KKV
        crane digest docker.io/yolean/kafka-hook:$TAG_HOOK
        crane cp docker.io/yolean/kafka-hook:$TAG_HOOK ghcr.io/yolean/kafka-hook:$TAG_HOOK
        crane cp solsson/kafka:$TAG_KAFKA ghcr.io/yolean/kafka:$TAG_KAFKA
        crane cp solsson/kafka:$TAG_ZOOKEEPER ghcr.io/yolean/kafka:$TAG_ZOOKEEPER
        crane cp solsson/kafka:$TAG_INITUTILS ghcr.io/yolean/kafka:$TAG_INITUTILS
        crane cp solsson/minio-deduplication@sha256:af91c49ce795eb8406c6303d41fd874e231459bd8a5897a35bb12e1cc8f762a6 ghcr.io/yolean/minio-deduplication
        crane cp envoyproxy/envoy:v1.17.0 ghcr.io/yolean/envoy:v1.17.0
        crane cp envoyproxy/envoy:$TAG_ENVOY ghcr.io/yolean/envoy:$TAG_ENVOY
        crane cp envoyproxy/envoy-distroless:$TAG_ENVOY ghcr.io/yolean/envoy-distroless:$TAG_ENVOY
        crane cp curlimages/curl:$TAG_CURL ghcr.io/yolean/curl:$TAG_CURL
        crane cp busybox:$TAG_BUSYBOX ghcr.io/yolean/busybox:$TAG_BUSYBOX
        crane cp mailgun/kafka-pixy:0.17.0@sha256:0b5f4795c0b0d80729fa7415ec70ae4d411e152c6149656dddf01b18184792e0 ghcr.io/yolean/kafka-pixy:0.17.0
        crane cp tinygo/tinygo:$TAG_TINYGO ghcr.io/yolean/tinygo:$TAG_TINYGO
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    ### build steps below are generated ###
    -
      name: Build and push node root
      uses: docker/build-push-action@v5
      env:
        SOURCE_DATE_EPOCH: 0
      with:
        context: node
        tags: |
          ghcr.io/yolean/node:root
          ghcr.io/yolean/node:${{ github.sha }}-root
        platforms: linux/amd64,linux/arm64/v8
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
    -
      name: Build and push node latest
      uses: docker/build-push-action@v5
      env:
        SOURCE_DATE_EPOCH: 0
      with:
        context: to-nonroot/node
        tags: |
          ghcr.io/yolean/node:latest
          ghcr.io/yolean/node:${{ github.sha }}
        platforms: linux/amd64,linux/arm64/v8
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-contexts: |
          yolean/node:root=docker-image://ghcr.io/yolean/node:root
    -
      name: Build and push node-kafka root
      uses: docker/build-push-action@v5
      env:
        SOURCE_DATE_EPOCH: 0
      with:
        context: node-kafka
        tags: |
          ghcr.io/yolean/node-kafka:root
          ghcr.io/yolean/node-kafka:${{ github.sha }}-root
        platforms: linux/amd64,linux/arm64/v8
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-contexts: |
          yolean/node:root=docker-image://ghcr.io/yolean/node:root
    -
      name: Build and push node-kafka latest
      uses: docker/build-push-action@v5
      env:
        SOURCE_DATE_EPOCH: 0
      with:
        context: to-nonroot/node-kafka
        tags: |
          ghcr.io/yolean/node-kafka:latest
          ghcr.io/yolean/node-kafka:${{ github.sha }}
        platforms: linux/amd64,linux/arm64/v8
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-contexts: |
          yolean/node-kafka:root=docker-image://ghcr.io/yolean/node-kafka:root
    -
      name: Build and push node-kafka-cache root
      uses: docker/build-push-action@v5
      env:
        SOURCE_DATE_EPOCH: 0
      with:
        context: node-kafka-cache
        tags: |
          ghcr.io/yolean/node-kafka-cache:root
          ghcr.io/yolean/node-kafka-cache:${{ github.sha }}-root
        platforms: linux/amd64,linux/arm64/v8
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-contexts: |
          yolean/node-kafka:root=docker-image://ghcr.io/yolean/node-kafka:root
    -
      name: Build and push node-kafka-cache latest
      uses: docker/build-push-action@v5
      env:
        SOURCE_DATE_EPOCH: 0
      with:
        context: to-nonroot/node-kafka-cache
        tags: |
          ghcr.io/yolean/node-kafka-cache:latest
          ghcr.io/yolean/node-kafka-cache:${{ github.sha }}
        platforms: linux/amd64,linux/arm64/v8
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-contexts: |
          yolean/node-kafka-cache:root=docker-image://ghcr.io/yolean/node-kafka-cache:root
